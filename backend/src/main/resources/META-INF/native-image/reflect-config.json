[
  {
    "name": "[B"
  },
  {
    "name": "[I"
  },
  {
    "name": "[Lcom.fasterxml.jackson.databind.deser.BeanDeserializerModifier;"
  },
  {
    "name": "[Lcom.fasterxml.jackson.databind.deser.Deserializers;"
  },
  {
    "name": "[Lcom.fasterxml.jackson.databind.deser.KeyDeserializers;"
  },
  {
    "name": "[Lcom.fasterxml.jackson.databind.deser.ValueInstantiators;"
  },
  {
    "name": "[Lcom.fasterxml.jackson.databind.ser.BeanSerializerModifier;"
  },
  {
    "name": "[Lcom.fasterxml.jackson.databind.ser.Serializers;"
  },
  {
    "name": "[Ljava.lang.String;"
  },
  {
    "name": "[Lorg.springframework.core.io.Resource;",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "from",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "valueOf",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "[Lorg.springframework.util.ConcurrentReferenceHashMap$Segment;"
  },
  {
    "name": "[Lorg.springframework.web.bind.annotation.RequestMethod;"
  },
  {
    "name": "[Z"
  },
  {
    "name": "android.app.Application"
  },
  {
    "name": "boolean",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "from",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "valueOf",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      }
    ]
  },
  {
    "name": "ch.qos.logback.classic.BasicConfigurator",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "ch.qos.logback.classic.LoggerContext"
  },
  {
    "name": "ch.qos.logback.classic.joran.SerializedModelConfigurator",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "ch.qos.logback.classic.pattern.DateConverter",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "ch.qos.logback.classic.pattern.LevelConverter",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "ch.qos.logback.classic.pattern.LineSeparatorConverter",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "ch.qos.logback.classic.pattern.LoggerConverter",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "ch.qos.logback.classic.pattern.MessageConverter",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "ch.qos.logback.classic.pattern.ThreadConverter",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "ch.qos.logback.classic.spi.LogbackServiceProvider"
  },
  {
    "name": "ch.qos.logback.classic.util.DefaultJoranConfigurator",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "clojure.core$clojure_version"
  },
  {
    "name": "co.elastic.clients.ApiClient",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "_jsonpMapper",
        "parameterTypes": []
      },
      {
        "name": "_transport",
        "parameterTypes": []
      },
      {
        "name": "_transportOptions",
        "parameterTypes": []
      },
      {
        "name": "withTransportOptions",
        "parameterTypes": [
          "java.util.function.Function"
        ]
      }
    ]
  },
  {
    "name": "co.elastic.clients.elasticsearch.ElasticsearchAsyncClient",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "shutdown",
        "parameterTypes": []
      },
      {
        "name": "withTransportOptions",
        "parameterTypes": [
          "co.elastic.clients.transport.TransportOptions"
        ]
      }
    ]
  },
  {
    "name": "co.elastic.clients.elasticsearch.ElasticsearchClient",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "shutdown",
        "parameterTypes": []
      },
      {
        "name": "withTransportOptions",
        "parameterTypes": [
          "co.elastic.clients.transport.TransportOptions"
        ]
      }
    ]
  },
  {
    "name": "co.elastic.clients.json.BufferingJsonpMapper",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "co.elastic.clients.json.JsonpMapper",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "attribute",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "deserialize",
        "parameterTypes": [
          "jakarta.json.stream.JsonParser",
          "java.lang.Class"
        ]
      },
      {
        "name": "deserialize",
        "parameterTypes": [
          "jakarta.json.stream.JsonParser",
          "java.lang.Class",
          "jakarta.json.stream.JsonParser$Event"
        ]
      },
      {
        "name": "ignoreUnknownFields",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "co.elastic.clients.json.JsonpMapperBase",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "attribute",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "deserialize",
        "parameterTypes": [
          "jakarta.json.stream.JsonParser",
          "java.lang.reflect.Type"
        ]
      },
      {
        "name": "deserialize",
        "parameterTypes": [
          "jakarta.json.stream.JsonParser",
          "java.lang.reflect.Type",
          "jakarta.json.stream.JsonParser$Event"
        ]
      }
    ]
  },
  {
    "name": "co.elastic.clients.json.jackson.JacksonJsonpMapper",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "createBufferingGenerator",
        "parameterTypes": []
      },
      {
        "name": "jsonProvider",
        "parameterTypes": []
      },
      {
        "name": "serialize",
        "parameterTypes": [
          "java.lang.Object",
          "jakarta.json.stream.JsonGenerator"
        ]
      },
      {
        "name": "withAttribute",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "co.elastic.clients.transport.ElasticsearchTransport",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "co.elastic.clients.transport.ElasticsearchTransportBase",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "jsonpMapper",
        "parameterTypes": []
      },
      {
        "name": "options",
        "parameterTypes": []
      },
      {
        "name": "performRequest",
        "parameterTypes": [
          "java.lang.Object",
          "co.elastic.clients.transport.Endpoint",
          "co.elastic.clients.transport.TransportOptions"
        ]
      },
      {
        "name": "performRequestAsync",
        "parameterTypes": [
          "java.lang.Object",
          "co.elastic.clients.transport.Endpoint",
          "co.elastic.clients.transport.TransportOptions"
        ]
      }
    ]
  },
  {
    "name": "co.elastic.clients.transport.Transport",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "co.elastic.clients.transport.rest_client.RestClientTransport",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "com.fasterxml.aalto.AsyncXMLStreamReader"
  },
  {
    "name": "com.fasterxml.jackson.annotation.JacksonAnnotation",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "com.fasterxml.jackson.annotation.JsonAnyGetter",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "com.fasterxml.jackson.annotation.JsonAnySetter",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "com.fasterxml.jackson.annotation.JsonInclude",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "com.fasterxml.jackson.annotation.JsonInclude$Include"
  },
  {
    "name": "com.fasterxml.jackson.annotation.JsonProperty",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "com.fasterxml.jackson.annotation.JsonPropertyOrder",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "com.fasterxml.jackson.core.JsonGenerator"
  },
  {
    "condition":{"typeReachable":"org.apache.logging.log4j.util.ServiceLoaderUtil"},
    "name":"java.util.ServiceLoader",
    "allPublicMethods":true
  },
  {
    "name": "com.fasterxml.jackson.core.ObjectCodec",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getJsonFactory",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.fasterxml.jackson.core.TreeCodec",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.apache.logging.log4j.Logger",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "com.fasterxml.jackson.core.Versioned",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "com.fasterxml.jackson.databind.Module",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getDependencies",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.fasterxml.jackson.databind.ObjectMapper",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "createArrayNode",
        "parameterTypes": []
      },
      {
        "name": "createObjectNode",
        "parameterTypes": []
      },
      {
        "name": "getFactory",
        "parameterTypes": []
      },
      {
        "name": "missingNode",
        "parameterTypes": []
      },
      {
        "name": "nullNode",
        "parameterTypes": []
      },
      {
        "name": "readTree",
        "parameterTypes": [
          "com.fasterxml.jackson.core.JsonParser"
        ]
      },
      {
        "name": "readValue",
        "parameterTypes": [
          "com.fasterxml.jackson.core.JsonParser",
          "com.fasterxml.jackson.core.type.ResolvedType"
        ]
      },
      {
        "name": "readValue",
        "parameterTypes": [
          "com.fasterxml.jackson.core.JsonParser",
          "com.fasterxml.jackson.core.type.TypeReference"
        ]
      },
      {
        "name": "readValue",
        "parameterTypes": [
          "com.fasterxml.jackson.core.JsonParser",
          "java.lang.Class"
        ]
      },
      {
        "name": "readValues",
        "parameterTypes": [
          "com.fasterxml.jackson.core.JsonParser",
          "com.fasterxml.jackson.core.type.ResolvedType"
        ]
      },
      {
        "name": "readValues",
        "parameterTypes": [
          "com.fasterxml.jackson.core.JsonParser",
          "com.fasterxml.jackson.core.type.TypeReference"
        ]
      },
      {
        "name": "readValues",
        "parameterTypes": [
          "com.fasterxml.jackson.core.JsonParser",
          "java.lang.Class"
        ]
      },
      {
        "name": "treeAsTokens",
        "parameterTypes": [
          "com.fasterxml.jackson.core.TreeNode"
        ]
      },
      {
        "name": "treeToValue",
        "parameterTypes": [
          "com.fasterxml.jackson.core.TreeNode",
          "java.lang.Class"
        ]
      },
      {
        "name": "version",
        "parameterTypes": []
      },
      {
        "name": "writeTree",
        "parameterTypes": [
          "com.fasterxml.jackson.core.JsonGenerator",
          "com.fasterxml.jackson.core.TreeNode"
        ]
      },
      {
        "name": "writeValue",
        "parameterTypes": [
          "com.fasterxml.jackson.core.JsonGenerator",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "com.fasterxml.jackson.databind.ext.Java7SupportImpl",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.fasterxml.jackson.databind.module.SimpleModule",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "addAbstractTypeMapping",
        "parameterTypes": [
          "java.lang.Class",
          "java.lang.Class"
        ]
      },
      {
        "name": "addDeserializer",
        "parameterTypes": [
          "java.lang.Class",
          "com.fasterxml.jackson.databind.JsonDeserializer"
        ]
      },
      {
        "name": "addKeyDeserializer",
        "parameterTypes": [
          "java.lang.Class",
          "com.fasterxml.jackson.databind.KeyDeserializer"
        ]
      },
      {
        "name": "addKeySerializer",
        "parameterTypes": [
          "java.lang.Class",
          "com.fasterxml.jackson.databind.JsonSerializer"
        ]
      },
      {
        "name": "addSerializer",
        "parameterTypes": [
          "com.fasterxml.jackson.databind.JsonSerializer"
        ]
      },
      {
        "name": "addSerializer",
        "parameterTypes": [
          "java.lang.Class",
          "com.fasterxml.jackson.databind.JsonSerializer"
        ]
      },
      {
        "name": "addValueInstantiator",
        "parameterTypes": [
          "java.lang.Class",
          "com.fasterxml.jackson.databind.deser.ValueInstantiator"
        ]
      },
      {
        "name": "getModuleName",
        "parameterTypes": []
      },
      {
        "name": "getTypeId",
        "parameterTypes": []
      },
      {
        "name": "registerSubtypes",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "registerSubtypes",
        "parameterTypes": [
          "com.fasterxml.jackson.databind.jsontype.NamedType[]"
        ]
      },
      {
        "name": "registerSubtypes",
        "parameterTypes": [
          "java.lang.Class[]"
        ]
      },
      {
        "name": "setAbstractTypes",
        "parameterTypes": [
          "com.fasterxml.jackson.databind.module.SimpleAbstractTypeResolver"
        ]
      },
      {
        "name": "setDeserializerModifier",
        "parameterTypes": [
          "com.fasterxml.jackson.databind.deser.BeanDeserializerModifier"
        ]
      },
      {
        "name": "setDeserializers",
        "parameterTypes": [
          "com.fasterxml.jackson.databind.module.SimpleDeserializers"
        ]
      },
      {
        "name": "setKeyDeserializers",
        "parameterTypes": [
          "com.fasterxml.jackson.databind.module.SimpleKeyDeserializers"
        ]
      },
      {
        "name": "setKeySerializers",
        "parameterTypes": [
          "com.fasterxml.jackson.databind.module.SimpleSerializers"
        ]
      },
      {
        "name": "setMixInAnnotation",
        "parameterTypes": [
          "java.lang.Class",
          "java.lang.Class"
        ]
      },
      {
        "name": "setSerializerModifier",
        "parameterTypes": [
          "com.fasterxml.jackson.databind.ser.BeanSerializerModifier"
        ]
      },
      {
        "name": "setSerializers",
        "parameterTypes": [
          "com.fasterxml.jackson.databind.module.SimpleSerializers"
        ]
      },
      {
        "name": "setValueInstantiators",
        "parameterTypes": [
          "com.fasterxml.jackson.databind.module.SimpleValueInstantiators"
        ]
      },
      {
        "name": "version",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.fasterxml.jackson.dataformat.cbor.CBORFactory"
  },
  {
    "name": "com.fasterxml.jackson.dataformat.smile.SmileFactory"
  },
  {
    "name": "com.fasterxml.jackson.dataformat.xml.XmlMapper"
  },
  {
    "name": "com.fasterxml.jackson.datatype.jdk8.Jdk8Module",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.fasterxml.jackson.datatype.jsr310.JavaTimeModule",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.fasterxml.jackson.module.paramnames.ParameterNamesModule",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "setupModule",
        "parameterTypes": [
          "com.fasterxml.jackson.databind.Module$SetupContext"
        ]
      }
    ]
  },
  {
    "name": "com.google.api.client.json.GenericJson",
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.google.api.client.util.GenericData",
    "allDeclaredFields": true
  },
  {
    "name": "com.google.api.core.BetaApi",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "com.google.api.core.InternalApi",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "com.google.api.gax.core.BackgroundResource",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "com.google.auth.appengine.AppEngineCredentials"
  },
  {
    "name": "com.google.auth.oauth2.GoogleCredentials",
    "methods": [
      {
        "name": "getQuotaProjectId",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.google.auth.oauth2.ServiceAccountCredentials",
    "methods": [
      {
        "name": "getClientEmail",
        "parameterTypes": []
      },
      {
        "name": "getClientId",
        "parameterTypes": []
      },
      {
        "name": "getPrivateKey",
        "parameterTypes": []
      },
      {
        "name": "getPrivateKeyId",
        "parameterTypes": []
      },
      {
        "name": "getScopes",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.google.auth.oauth2.ServiceAccountJwtAccessCredentials",
    "methods": [
      {
        "name": "newBuilder",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.google.auth.oauth2.ServiceAccountJwtAccessCredentials$Builder",
    "methods": [
      {
        "name": "build",
        "parameterTypes": []
      },
      {
        "name": "setClientEmail",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setClientId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPrivateKey",
        "parameterTypes": [
          "java.security.PrivateKey"
        ]
      },
      {
        "name": "setPrivateKeyId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setQuotaProjectId",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "com.google.cloud.documentai.v1.DocumentProcessorServiceClient",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "awaitTermination",
        "parameterTypes": [
          "long",
          "java.util.concurrent.TimeUnit"
        ]
      },
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "isShutdown",
        "parameterTypes": []
      },
      {
        "name": "isTerminated",
        "parameterTypes": []
      },
      {
        "name": "shutdown",
        "parameterTypes": []
      },
      {
        "name": "shutdownNow",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.google.cloud.vertexai.VertexAI",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.google.common.base.Optional"
  },
  {
    "name": "com.google.gson.Gson",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "com.google.gson.GsonBuilder",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "com.google.protobuf.ExtensionRegistry",
    "methods": [
      {
        "name": "getEmptyRegistry",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.google.protobuf.Message"
  },
  {
    "name": "com.ibm.lang.management.OperatingSystemMXBean"
  },
  {
    "name": "com.samskivert.mustache.Template"
  },
  {
    "name": "com.sidutti.charlie.SiduttiApplication",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "main",
        "parameterTypes": [
          "java.lang.String[]"
        ]
      },
      {
        "name": "setBeanFactory",
        "parameterTypes": [
          "org.springframework.beans.factory.BeanFactory"
        ]
      }
    ]
  },
  {
    "name": "com.sidutti.charlie.SiduttiApplication$$SpringCGLIB$$0",
    "allDeclaredFields": true,
    "fields": [
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ],
    "methods": [
      {
        "name": "CGLIB$SET_STATIC_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      },
      {
        "name": "CGLIB$SET_THREAD_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      }
    ]
  },
  {
    "name": "com.sidutti.charlie.SiduttiApplication__ApplicationContextInitializer",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.sidutti.charlie.cloud.google.DocumentService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "com.google.cloud.documentai.v1.DocumentProcessorServiceClient",
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "com.sidutti.charlie.config.AIConfig",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "setBeanFactory",
        "parameterTypes": [
          "org.springframework.beans.factory.BeanFactory"
        ]
      }
    ]
  },
  {
    "name": "com.sidutti.charlie.config.AIConfig$$SpringCGLIB$$0",
    "allDeclaredFields": true,
    "fields": [
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ],
    "methods": [
      {
        "name": "CGLIB$SET_STATIC_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      },
      {
        "name": "CGLIB$SET_THREAD_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      }
    ]
  },
  {
    "name": "com.sidutti.charlie.config.AIConfig$$SpringCGLIB$$FastClass$$0",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Class"
        ]
      }
    ]
  },
  {
    "name": "com.sidutti.charlie.config.AIConfig$$SpringCGLIB$$FastClass$$1",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Class"
        ]
      }
    ]
  },
  {
    "name": "com.sidutti.charlie.config.GoogleCloudConfig",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "setBeanFactory",
        "parameterTypes": [
          "org.springframework.beans.factory.BeanFactory"
        ]
      }
    ]
  },
  {
    "name": "com.sidutti.charlie.config.GoogleCloudConfig$$SpringCGLIB$$0",
    "allDeclaredFields": true,
    "fields": [
      {
        "name": "CGLIB$FACTORY_DATA"
      }
    ],
    "methods": [
      {
        "name": "CGLIB$SET_STATIC_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      },
      {
        "name": "CGLIB$SET_THREAD_CALLBACKS",
        "parameterTypes": [
          "org.springframework.cglib.proxy.Callback[]"
        ]
      }
    ]
  },
  {
    "name": "com.sidutti.charlie.config.GoogleCloudConfig$$SpringCGLIB$$FastClass$$0",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Class"
        ]
      }
    ]
  },
  {
    "name": "com.sidutti.charlie.config.GoogleCloudConfig$$SpringCGLIB$$FastClass$$1",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Class"
        ]
      }
    ]
  },
  {
    "name": "com.sidutti.charlie.controller.ChatController",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.ai.vertexai.gemini.VertexAiGeminiChatModel",
          "com.sidutti.charlie.cloud.google.DocumentService"
        ]
      }
    ]
  },
  {
    "name": "com.sidutti.charlie.controller.EmbeddingController",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "com.sidutti.charlie.service.WikiRandomEmbeddingGenerator",
          "com.sidutti.charlie.service.SearchService",
          "com.sidutti.charlie.service.HuggingFaceService",
          "com.sidutti.charlie.service.PdfService",
          "com.sidutti.charlie.service.SplitService",
          "com.sidutti.charlie.service.EmbeddingService",
          "com.sidutti.charlie.service.VectorService"
        ]
      }
    ]
  },
  {
    "name": "com.sidutti.charlie.model.Document",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true
  },
  {
    "name": "com.sidutti.charlie.repository.elastic.ElasticDocumentRepository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "com.sidutti.charlie.service.EmbeddingService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.ai.embedding.EmbeddingModel"
        ]
      }
    ]
  },
  {
    "name": "com.sidutti.charlie.service.HuggingFaceService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.web.reactive.function.client.WebClient",
          "com.sidutti.charlie.service.SplitService",
          "com.sidutti.charlie.service.EmbeddingService",
          "com.sidutti.charlie.service.VectorService"
        ]
      }
    ]
  },
  {
    "name": "com.sidutti.charlie.service.PdfService",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "com.sidutti.charlie.service.SearchService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.ai.embedding.EmbeddingModel",
          "co.elastic.clients.elasticsearch.ElasticsearchAsyncClient"
        ]
      }
    ]
  },
  {
    "name": "com.sidutti.charlie.service.SemanticChunkingService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.ai.embedding.EmbeddingModel"
        ]
      }
    ]
  },
  {
    "name": "com.sidutti.charlie.service.SplitService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "com.sidutti.charlie.service.SemanticChunkingService"
        ]
      }
    ]
  },
  {
    "name": "com.sidutti.charlie.service.VectorService",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "co.elastic.clients.elasticsearch.ElasticsearchAsyncClient"
        ]
      }
    ]
  },
  {
    "name": "com.sidutti.charlie.service.WikiRandomEmbeddingGenerator",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.ai.embedding.EmbeddingModel",
          "org.springframework.web.reactive.function.client.WebClient",
          "com.fasterxml.jackson.databind.ObjectMapper",
          "com.sidutti.charlie.repository.elastic.ElasticDocumentRepository"
        ]
      }
    ]
  },
  {
    "name": "com.sun.crypto.provider.AESCipher$General",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.sun.crypto.provider.ARCFOURCipher",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.sun.crypto.provider.ChaCha20Cipher$ChaCha20Poly1305",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.sun.crypto.provider.DESCipher",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.sun.crypto.provider.DESedeCipher",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.sun.crypto.provider.DHParameters",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.sun.crypto.provider.GaloisCounterMode$AESGCM",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.sun.crypto.provider.TlsMasterSecretGenerator",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.sun.jndi.dns.DnsContextFactory"
  },
  {
    "name": "com.sun.management.GarbageCollectionNotificationInfo"
  },
  {
    "name": "com.sun.management.GcInfo",
    "fields": [
      {
        "name": "builder"
      },
      {
        "name": "extAttributes"
      }
    ],
    "methods": [
      {
        "name": "getMemoryUsageBeforeGc",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.sun.management.OperatingSystemMXBean",
    "methods": [
      {
        "name": "getCpuLoad",
        "parameterTypes": []
      },
      {
        "name": "getProcessCpuLoad",
        "parameterTypes": []
      },
      {
        "name": "getProcessCpuTime",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.sun.management.UnixOperatingSystemMXBean",
    "methods": [
      {
        "name": "getMaxFileDescriptorCount",
        "parameterTypes": []
      },
      {
        "name": "getOpenFileDescriptorCount",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.sun.org.apache.xalan.internal.xsltc.trax.TransformerFactoryImpl",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "com.sun.security.cert.internal.x509.X509V1CertImpl"
  },
  {
    "name": "com.sun.xml.internal.stream.XMLInputFactoryImpl",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "freemarker.template.Configuration"
  },
  {
    "name": "groovy.lang.GroovySystem"
  },
  {
    "name": "groovy.text.TemplateEngine"
  },
  {
    "name": "io.cloudevents.CloudEvent"
  },
  {
    "name": "io.grpc.census.InternalCensusStatsAccessor"
  },
  {
    "name": "io.grpc.census.InternalCensusTracingAccessor"
  },
  {
    "name": "io.grpc.googleapis.GoogleCloudToProdExperimentalNameResolverProvider"
  },
  {
    "name": "io.grpc.googleapis.GoogleCloudToProdNameResolverProvider"
  },
  {
    "name": "io.grpc.grpclb.GrpclbLoadBalancerProvider"
  },
  {
    "name": "io.grpc.grpclb.SecretGrpclbNameResolverProvider$Provider"
  },
  {
    "name": "io.grpc.internal.DnsNameResolverProvider"
  },
  {
    "name": "io.grpc.internal.JndiResourceResolverFactory",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "io.grpc.internal.PickFirstLoadBalancerProvider"
  },
  {
    "name": "io.grpc.netty.NettyChannelProvider"
  },
  {
    "name": "io.grpc.netty.UdsNettyChannelProvider"
  },
  {
    "name": "io.grpc.netty.shaded.io.grpc.netty.NettyChannelProvider"
  },
  {
    "name": "io.grpc.netty.shaded.io.grpc.netty.UdsNameResolverProvider"
  },
  {
    "name": "io.grpc.netty.shaded.io.grpc.netty.UdsNettyChannelProvider"
  },
  {
    "name": "io.grpc.netty.shaded.io.netty.buffer.AbstractByteBufAllocator",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "io.grpc.netty.shaded.io.netty.buffer.AbstractReferenceCountedByteBuf",
    "fields": [
      {
        "name": "refCnt"
      }
    ]
  },
  {
    "name": "io.grpc.netty.shaded.io.netty.channel.DefaultFileRegion"
  },
  {
    "name": "io.grpc.netty.shaded.io.netty.channel.epoll.Epoll",
    "methods": [
      {
        "name": "isAvailable",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "io.grpc.netty.shaded.io.netty.channel.epoll.EpollDomainSocketChannel"
  },
  {
    "name": "io.grpc.netty.shaded.io.netty.channel.epoll.EpollEventLoopGroup",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "int",
          "java.util.concurrent.ThreadFactory"
        ]
      }
    ]
  },
  {
    "name": "io.grpc.netty.shaded.io.netty.channel.epoll.EpollServerSocketChannel",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "io.grpc.netty.shaded.io.netty.channel.epoll.EpollSocketChannel",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "io.grpc.netty.shaded.io.netty.channel.epoll.NativeDatagramPacketArray$NativeDatagramPacket"
  },
  {
    "name": "io.grpc.netty.shaded.io.netty.channel.unix.DatagramSocketAddress"
  },
  {
    "name": "io.grpc.netty.shaded.io.netty.channel.unix.DomainDatagramSocketAddress"
  },
  {
    "name": "io.grpc.netty.shaded.io.netty.channel.unix.FileDescriptor",
    "fields": [
      {
        "name": "state"
      }
    ]
  },
  {
    "name": "io.grpc.netty.shaded.io.netty.channel.unix.PeerCredentials"
  },
  {
    "name": "io.grpc.netty.shaded.io.netty.internal.tcnative.CertificateCallback"
  },
  {
    "name": "io.grpc.netty.shaded.io.netty.internal.tcnative.CertificateCallbackTask"
  },
  {
    "name": "io.grpc.netty.shaded.io.netty.internal.tcnative.SSLContext"
  },
  {
    "name": "io.grpc.netty.shaded.io.netty.internal.tcnative.SSLPrivateKeyMethodDecryptTask"
  },
  {
    "name": "io.grpc.netty.shaded.io.netty.internal.tcnative.SSLPrivateKeyMethodSignTask"
  },
  {
    "name": "io.grpc.netty.shaded.io.netty.internal.tcnative.SSLPrivateKeyMethodTask"
  },
  {
    "name": "io.grpc.netty.shaded.io.netty.internal.tcnative.SSLTask"
  },
  {
    "name": "io.grpc.netty.shaded.io.netty.util.AbstractReferenceCounted",
    "fields": [
      {
        "name": "refCnt"
      }
    ]
  },
  {
    "name": "io.grpc.netty.shaded.io.netty.util.DefaultAttributeMap",
    "fields": [
      {
        "name": "attributes"
      }
    ]
  },
  {
    "name": "io.grpc.netty.shaded.io.netty.util.Recycler$DefaultHandle",
    "fields": [
      {
        "name": "state"
      }
    ]
  },
  {
    "name": "io.grpc.netty.shaded.io.netty.util.concurrent.DefaultPromise",
    "fields": [
      {
        "name": "result"
      }
    ]
  },
  {
    "name": "io.grpc.netty.shaded.io.netty.util.concurrent.SingleThreadEventExecutor",
    "fields": [
      {
        "name": "state"
      },
      {
        "name": "threadProperties"
      }
    ]
  },
  {
    "name": "io.grpc.netty.shaded.io.netty.util.internal.NativeLibraryUtil",
    "methods": [
      {
        "name": "loadLibrary",
        "parameterTypes": [
          "java.lang.String",
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "io.grpc.netty.shaded.io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueueColdProducerFields",
    "fields": [
      {
        "name": "producerLimit"
      }
    ]
  },
  {
    "name": "io.grpc.netty.shaded.io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueueConsumerFields",
    "fields": [
      {
        "name": "consumerIndex"
      }
    ]
  },
  {
    "name": "io.grpc.netty.shaded.io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueueProducerFields",
    "fields": [
      {
        "name": "producerIndex"
      }
    ]
  },
  {
    "name": "io.grpc.okhttp.OkHttpChannelProvider"
  },
  {
    "name": "io.grpc.protobuf.services.internal.HealthCheckingRoundRobinLoadBalancerProvider"
  },
  {
    "name": "io.grpc.util.OutlierDetectionLoadBalancerProvider"
  },
  {
    "name": "io.grpc.util.SecretRoundRobinLoadBalancerProvider$Provider",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "io.grpc.xds.CdsLoadBalancerProvider"
  },
  {
    "name": "io.grpc.xds.ClusterImplLoadBalancerProvider"
  },
  {
    "name": "io.grpc.xds.ClusterManagerLoadBalancerProvider"
  },
  {
    "name": "io.grpc.xds.ClusterResolverLoadBalancerProvider"
  },
  {
    "name": "io.grpc.xds.LeastRequestLoadBalancerProvider"
  },
  {
    "name": "io.grpc.xds.PriorityLoadBalancerProvider"
  },
  {
    "name": "io.grpc.xds.RingHashLoadBalancerProvider"
  },
  {
    "name": "io.grpc.xds.WeightedRoundRobinLoadBalancerProvider"
  },
  {
    "name": "io.grpc.xds.WeightedTargetLoadBalancerProvider"
  },
  {
    "name": "io.grpc.xds.WrrLocalityLoadBalancerProvider"
  },
  {
    "name": "io.grpc.xds.XdsNameResolverProvider"
  },
  {
    "name": "io.micrometer.common.lang.NonNullApi",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "io.micrometer.common.lang.NonNullFields",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "io.micrometer.common.lang.Nullable",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "io.micrometer.context.ContextRegistry"
  },
  {
    "name": "io.micrometer.core.instrument.Clock",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "io.micrometer.core.instrument.Clock$1",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "monotonicTime",
        "parameterTypes": []
      },
      {
        "name": "wallTime",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "io.micrometer.core.instrument.MeterRegistry",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "clear",
        "parameterTypes": []
      },
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "config",
        "parameterTypes": []
      },
      {
        "name": "counter",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Iterable"
        ]
      },
      {
        "name": "counter",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String[]"
        ]
      },
      {
        "name": "find",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "forEachMeter",
        "parameterTypes": [
          "java.util.function.Consumer"
        ]
      },
      {
        "name": "gauge",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Iterable",
          "java.lang.Number"
        ]
      },
      {
        "name": "gauge",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Iterable",
          "java.lang.Object",
          "java.util.function.ToDoubleFunction"
        ]
      },
      {
        "name": "gauge",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Number"
        ]
      },
      {
        "name": "gauge",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object",
          "java.util.function.ToDoubleFunction"
        ]
      },
      {
        "name": "gaugeCollectionSize",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Iterable",
          "java.util.Collection"
        ]
      },
      {
        "name": "gaugeMapSize",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Iterable",
          "java.util.Map"
        ]
      },
      {
        "name": "get",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getMeters",
        "parameterTypes": []
      },
      {
        "name": "isClosed",
        "parameterTypes": []
      },
      {
        "name": "more",
        "parameterTypes": []
      },
      {
        "name": "remove",
        "parameterTypes": [
          "io.micrometer.core.instrument.Meter$Id"
        ]
      },
      {
        "name": "remove",
        "parameterTypes": [
          "io.micrometer.core.instrument.Meter"
        ]
      },
      {
        "name": "removeByPreFilterId",
        "parameterTypes": [
          "io.micrometer.core.instrument.Meter$Id"
        ]
      },
      {
        "name": "summary",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Iterable"
        ]
      },
      {
        "name": "summary",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String[]"
        ]
      },
      {
        "name": "timer",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Iterable"
        ]
      },
      {
        "name": "timer",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String[]"
        ]
      }
    ]
  },
  {
    "name": "io.micrometer.core.instrument.binder.MeterBinder",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "io.micrometer.core.instrument.binder.jvm.ClassLoaderMetrics",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "bindTo",
        "parameterTypes": [
          "io.micrometer.core.instrument.MeterRegistry"
        ]
      }
    ]
  },
  {
    "name": "io.micrometer.core.instrument.binder.jvm.JvmCompilationMetrics",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "bindTo",
        "parameterTypes": [
          "io.micrometer.core.instrument.MeterRegistry"
        ]
      }
    ]
  },
  {
    "name": "io.micrometer.core.instrument.binder.jvm.JvmGcMetrics",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "bindTo",
        "parameterTypes": [
          "io.micrometer.core.instrument.MeterRegistry"
        ]
      },
      {
        "name": "close",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "io.micrometer.core.instrument.binder.jvm.JvmHeapPressureMetrics",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "bindTo",
        "parameterTypes": [
          "io.micrometer.core.instrument.MeterRegistry"
        ]
      },
      {
        "name": "close",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "io.micrometer.core.instrument.binder.jvm.JvmInfoMetrics",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "bindTo",
        "parameterTypes": [
          "io.micrometer.core.instrument.MeterRegistry"
        ]
      }
    ]
  },
  {
    "name": "io.micrometer.core.instrument.binder.jvm.JvmMemoryMetrics",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "bindTo",
        "parameterTypes": [
          "io.micrometer.core.instrument.MeterRegistry"
        ]
      }
    ]
  },
  {
    "name": "io.micrometer.core.instrument.binder.jvm.JvmThreadMetrics",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "bindTo",
        "parameterTypes": [
          "io.micrometer.core.instrument.MeterRegistry"
        ]
      }
    ]
  },
  {
    "name": "io.micrometer.core.instrument.binder.logging.LogbackMetrics",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "bindTo",
        "parameterTypes": [
          "io.micrometer.core.instrument.MeterRegistry"
        ]
      },
      {
        "name": "close",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "io.micrometer.core.instrument.binder.system.FileDescriptorMetrics",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "bindTo",
        "parameterTypes": [
          "io.micrometer.core.instrument.MeterRegistry"
        ]
      }
    ]
  },
  {
    "name": "io.micrometer.core.instrument.binder.system.ProcessorMetrics",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "bindTo",
        "parameterTypes": [
          "io.micrometer.core.instrument.MeterRegistry"
        ]
      }
    ]
  },
  {
    "name": "io.micrometer.core.instrument.binder.system.UptimeMetrics",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "bindTo",
        "parameterTypes": [
          "io.micrometer.core.instrument.MeterRegistry"
        ]
      }
    ]
  },
  {
    "name": "io.micrometer.core.instrument.config.MeterFilter",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "map",
        "parameterTypes": [
          "io.micrometer.core.instrument.Meter$Id"
        ]
      }
    ]
  },
  {
    "name": "io.micrometer.core.instrument.config.MeterFilter$9",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "accept",
        "parameterTypes": [
          "io.micrometer.core.instrument.Meter$Id"
        ]
      },
      {
        "name": "configure",
        "parameterTypes": [
          "io.micrometer.core.instrument.Meter$Id",
          "io.micrometer.core.instrument.distribution.DistributionStatisticConfig"
        ]
      }
    ]
  },
  {
    "name": "io.micrometer.core.instrument.distribution.TimeWindowMax",
    "fields": [
      {
        "name": "rotating"
      }
    ]
  },
  {
    "name": "io.micrometer.core.instrument.distribution.TimeWindowSum",
    "fields": [
      {
        "name": "rotating"
      }
    ]
  },
  {
    "name": "io.micrometer.core.instrument.observation.DefaultMeterObservationHandler",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "onEvent",
        "parameterTypes": [
          "io.micrometer.observation.Observation$Event",
          "io.micrometer.observation.Observation$Context"
        ]
      },
      {
        "name": "onStart",
        "parameterTypes": [
          "io.micrometer.observation.Observation$Context"
        ]
      },
      {
        "name": "onStop",
        "parameterTypes": [
          "io.micrometer.observation.Observation$Context"
        ]
      }
    ]
  },
  {
    "name": "io.micrometer.core.instrument.observation.MeterObservationHandler",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "supportsContext",
        "parameterTypes": [
          "io.micrometer.observation.Observation$Context"
        ]
      }
    ]
  },
  {
    "name": "io.micrometer.core.instrument.simple.SimpleMeterRegistry",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "io.micrometer.observation.ObservationHandler",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "onError",
        "parameterTypes": [
          "io.micrometer.observation.Observation$Context"
        ]
      },
      {
        "name": "onScopeClosed",
        "parameterTypes": [
          "io.micrometer.observation.Observation$Context"
        ]
      },
      {
        "name": "onScopeOpened",
        "parameterTypes": [
          "io.micrometer.observation.Observation$Context"
        ]
      },
      {
        "name": "onScopeReset",
        "parameterTypes": [
          "io.micrometer.observation.Observation$Context"
        ]
      }
    ]
  },
  {
    "name": "io.micrometer.observation.ObservationRegistry",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "io.micrometer.observation.SimpleObservationRegistry",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getCurrentObservation",
        "parameterTypes": []
      },
      {
        "name": "getCurrentObservationScope",
        "parameterTypes": []
      },
      {
        "name": "isNoop",
        "parameterTypes": []
      },
      {
        "name": "observationConfig",
        "parameterTypes": []
      },
      {
        "name": "setCurrentObservationScope",
        "parameterTypes": [
          "io.micrometer.observation.Observation$Scope"
        ]
      }
    ]
  },
  {
    "name": "io.micrometer.tracing.Tracer"
  },
  {
    "name": "io.netty.buffer.AbstractByteBufAllocator",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "io.netty.buffer.ByteBuf"
  },
  {
    "name": "io.netty.channel.AbstractChannelHandlerContext",
    "fields": [
      {
        "name": "handlerState"
      }
    ]
  },
  {
    "name": "io.netty.channel.ChannelInboundHandlerAdapter",
    "methods": [
      {
        "name": "channelActive",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelInactive",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelRead",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object"
        ]
      },
      {
        "name": "channelReadComplete",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelRegistered",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelUnregistered",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelWritabilityChanged",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "userEventTriggered",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "io.netty.channel.ChannelInitializer",
    "methods": [
      {
        "name": "channelRegistered",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "exceptionCaught",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Throwable"
        ]
      }
    ]
  },
  {
    "name": "io.netty.channel.ChannelOutboundBuffer",
    "fields": [
      {
        "name": "totalPendingSize"
      },
      {
        "name": "unwritable"
      }
    ]
  },
  {
    "name": "io.netty.channel.DefaultChannelConfig",
    "fields": [
      {
        "name": "autoRead"
      },
      {
        "name": "writeBufferWaterMark"
      }
    ]
  },
  {
    "name": "io.netty.channel.DefaultChannelPipeline",
    "fields": [
      {
        "name": "estimatorHandle"
      }
    ]
  },
  {
    "name": "io.netty.channel.DefaultChannelPipeline$HeadContext",
    "methods": [
      {
        "name": "bind",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.net.SocketAddress",
          "io.netty.channel.ChannelPromise"
        ]
      },
      {
        "name": "channelActive",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelInactive",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelRead",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object"
        ]
      },
      {
        "name": "channelReadComplete",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelRegistered",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelUnregistered",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelWritabilityChanged",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "close",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "io.netty.channel.ChannelPromise"
        ]
      },
      {
        "name": "connect",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.net.SocketAddress",
          "java.net.SocketAddress",
          "io.netty.channel.ChannelPromise"
        ]
      },
      {
        "name": "deregister",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "io.netty.channel.ChannelPromise"
        ]
      },
      {
        "name": "disconnect",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "io.netty.channel.ChannelPromise"
        ]
      },
      {
        "name": "exceptionCaught",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Throwable"
        ]
      },
      {
        "name": "flush",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "read",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "userEventTriggered",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object"
        ]
      },
      {
        "name": "write",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object",
          "io.netty.channel.ChannelPromise"
        ]
      }
    ]
  },
  {
    "name": "io.netty.channel.DefaultChannelPipeline$TailContext",
    "methods": [
      {
        "name": "channelActive",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelInactive",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelRead",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object"
        ]
      },
      {
        "name": "channelReadComplete",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelRegistered",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelUnregistered",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "channelWritabilityChanged",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext"
        ]
      },
      {
        "name": "exceptionCaught",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Throwable"
        ]
      },
      {
        "name": "userEventTriggered",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "io.netty.channel.DefaultFileRegion"
  },
  {
    "name": "io.netty.channel.epoll.Epoll"
  },
  {
    "name": "io.netty.channel.epoll.NativeDatagramPacketArray$NativeDatagramPacket"
  },
  {
    "name": "io.netty.channel.unix.DatagramSocketAddress"
  },
  {
    "name": "io.netty.channel.unix.DomainDatagramSocketAddress"
  },
  {
    "name": "io.netty.channel.unix.FileDescriptor",
    "fields": [
      {
        "name": "state"
      }
    ]
  },
  {
    "name": "io.netty.channel.unix.PeerCredentials"
  },
  {
    "name": "io.netty.incubator.channel.uring.IOUring"
  },
  {
    "name": "io.netty.resolver.dns.Cache$Entries",
    "fields": [
      {
        "name": "expirationFuture"
      }
    ]
  },
  {
    "name": "io.netty.util.AbstractReferenceCounted",
    "fields": [
      {
        "name": "refCnt"
      }
    ]
  },
  {
    "name": "io.netty.util.DefaultAttributeMap",
    "fields": [
      {
        "name": "attributes"
      }
    ]
  },
  {
    "name": "io.netty.util.concurrent.DefaultPromise",
    "fields": [
      {
        "name": "result"
      }
    ]
  },
  {
    "name": "io.netty.util.concurrent.SingleThreadEventExecutor",
    "fields": [
      {
        "name": "state"
      },
      {
        "name": "threadProperties"
      }
    ]
  },
  {
    "name": "io.netty.util.internal.NativeLibraryUtil",
    "methods": [
      {
        "name": "loadLibrary",
        "parameterTypes": [
          "java.lang.String",
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueueColdProducerFields",
    "fields": [
      {
        "name": "producerLimit"
      }
    ]
  },
  {
    "name": "io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueueConsumerFields",
    "fields": [
      {
        "name": "consumerIndex"
      }
    ]
  },
  {
    "name": "io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueueProducerFields",
    "fields": [
      {
        "name": "producerIndex"
      }
    ]
  },
  {
    "name": "io.netty5.buffer.Buffer"
  },
  {
    "name": "io.opentelemetry.api.incubator.trace.ExtendedDefaultTracerProvider"
  },
  {
    "name": "io.opentelemetry.sdk.autoconfigure.AutoConfiguredOpenTelemetrySdk"
  },
  {
    "name": "io.reactivex.rxjava3.core.Flowable"
  },
  {
    "name": "io.smallrye.mutiny.Multi"
  },
  {
    "name": "io.undertow.websockets.WebSocketProtocolHandshakeHandler"
  },
  {
    "name": "io.vavr.control.Option"
  },
  {
    "name": "io.vavr.control.Try"
  },
  {
    "name": "jakarta.inject.Provider"
  },
  {
    "name": "jakarta.inject.Qualifier"
  },
  {
    "name": "jakarta.json.bind.Jsonb"
  },
  {
    "name": "jakarta.validation.Validator"
  },
  {
    "name": "jakarta.xml.bind.Binder"
  },
  {
    "name": "java.io.Closeable",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "java.io.Console",
    "methods": [
      {
        "name": "charset",
        "parameterTypes": []
      },
      {
        "name": "isTerminal",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "java.io.FileDescriptor"
  },
  {
    "name": "java.io.FilePermission"
  },
  {
    "name": "java.io.IOException"
  },
  {
    "name": "java.io.Serializable",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "java.lang.AutoCloseable",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "java.lang.Boolean",
    "fields": [
      {
        "name": "TYPE"
      }
    ],
    "methods": [
      {
        "name": "toboolean",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "java.lang.Byte",
    "fields": [
      {
        "name": "TYPE"
      }
    ]
  },
  {
    "name": "java.lang.Character",
    "fields": [
      {
        "name": "TYPE"
      }
    ]
  },
  {
    "name": "java.lang.Class",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "accessFlags",
        "parameterTypes": []
      },
      {
        "name": "from",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "valueOf",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "java.lang.ClassLoader",
    "queryAllDeclaredMethods": true,
    "fields": [
      {
        "name": "classLoaderValueMap"
      }
    ],
    "methods": [
      {
        "name": "defineClass",
        "parameterTypes": [
          "java.lang.String",
          "byte[]",
          "int",
          "int",
          "java.security.ProtectionDomain"
        ]
      }
    ]
  },
  {
    "name": "java.lang.Double",
    "fields": [
      {
        "name": "TYPE"
      }
    ]
  },
  {
    "name": "java.lang.Exception"
  },
  {
    "name": "java.lang.Float",
    "fields": [
      {
        "name": "TYPE"
      }
    ]
  },
  {
    "name": "java.lang.IllegalArgumentException"
  },
  {
    "name": "java.lang.Integer",
    "fields": [
      {
        "name": "TYPE"
      }
    ]
  },
  {
    "name": "java.lang.Long",
    "fields": [
      {
        "name": "TYPE"
      }
    ]
  },
  {
    "name": "java.lang.Module",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "java.lang.NullPointerException"
  },
  {
    "name": "java.lang.Object",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "java.lang.OutOfMemoryError"
  },
  {
    "name": "java.lang.ProcessHandle",
    "methods": [
      {
        "name": "current",
        "parameterTypes": []
      },
      {
        "name": "pid",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "java.lang.Record",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "java.lang.RuntimeException"
  },
  {
    "name": "java.lang.RuntimePermission"
  },
  {
    "name": "java.lang.Short",
    "fields": [
      {
        "name": "TYPE"
      }
    ]
  },
  {
    "name": "java.lang.String",
    "queryAllDeclaredMethods": true,
    "fields": [
      {
        "name": "TYPE"
      }
    ]
  },
  {
    "name": "java.lang.Thread",
    "fields": [
      {
        "name": "threadLocalRandomProbe"
      }
    ]
  },
  {
    "name": "java.lang.Throwable",
    "allDeclaredFields": true
  },
  {
    "name": "java.lang.Void",
    "fields": [
      {
        "name": "TYPE"
      }
    ]
  },
  {
    "name": "java.lang.constant.Constable",
    "queryAllPublicMethods": true
  },
  {
    "name": "java.lang.invoke.TypeDescriptor$OfField",
    "queryAllPublicMethods": true
  },
  {
    "name": "java.lang.management.MemoryUsage",
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "from",
        "parameterTypes": [
          "javax.management.openmbean.CompositeData"
        ]
      }
    ]
  },
  {
    "name": "java.lang.reflect.AnnotatedElement",
    "queryAllPublicMethods": true
  },
  {
    "name": "java.lang.reflect.GenericDeclaration",
    "queryAllPublicMethods": true
  },
  {
    "name": "java.lang.reflect.ParameterizedType",
    "methods": [
      {
        "name": "getActualTypeArguments",
        "parameterTypes": []
      },
      {
        "name": "getRawType",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "java.lang.reflect.Type",
    "queryAllPublicMethods": true
  },
  {
    "name": "java.lang.reflect.WildcardType",
    "methods": [
      {
        "name": "getLowerBounds",
        "parameterTypes": []
      },
      {
        "name": "getUpperBounds",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "java.math.BigDecimal"
  },
  {
    "name": "java.math.BigInteger"
  },
  {
    "name": "java.net.InetSocketAddress"
  },
  {
    "name": "java.net.NetPermission"
  },
  {
    "name": "java.net.PortUnreachableException"
  },
  {
    "name": "java.net.SocketPermission"
  },
  {
    "name": "java.net.URLClassLoader",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "java.net.URLPermission",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "java.net.http.HttpClient"
  },
  {
    "name": "java.nio.Bits",
    "fields": [
      {
        "name": "MAX_MEMORY"
      },
      {
        "name": "UNALIGNED"
      }
    ]
  },
  {
    "name": "java.nio.Buffer",
    "fields": [
      {
        "name": "address"
      }
    ]
  },
  {
    "name": "java.nio.ByteBuffer",
    "methods": [
      {
        "name": "alignedSlice",
        "parameterTypes": [
          "int"
        ]
      }
    ]
  },
  {
    "name": "java.nio.DirectByteBuffer",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "long",
          "long"
        ]
      }
    ]
  },
  {
    "name": "java.nio.channels.ClosedChannelException"
  },
  {
    "name": "java.nio.channels.FileChannel"
  },
  {
    "name": "java.security.AlgorithmParametersSpi"
  },
  {
    "name": "java.security.AllPermission"
  },
  {
    "name": "java.security.KeyStoreSpi"
  },
  {
    "name": "java.security.SecureClassLoader",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "java.security.SecurityPermission"
  },
  {
    "name": "java.sql.Date"
  },
  {
    "name": "java.sql.Timestamp"
  },
  {
    "name": "java.text.NumberFormat",
    "methods": [
      {
        "name": "isStrict",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "java.time.Duration",
    "methods": [
      {
        "name": "isPositive",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "java.util.AbstractMap",
    "allDeclaredFields": true
  },
  {
    "name": "java.util.Date"
  },
  {
    "name": "java.util.PropertyPermission"
  },
  {
    "name": "java.util.SortedSet",
    "methods": [
      {
        "name": "getFirst",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "java.util.concurrent.Future",
    "methods": [
      {
        "name": "state",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "java.util.concurrent.atomic.AtomicBoolean",
    "fields": [
      {
        "name": "value"
      }
    ]
  },
  {
    "name": "java.util.concurrent.atomic.AtomicMarkableReference",
    "fields": [
      {
        "name": "pair"
      }
    ]
  },
  {
    "name": "java.util.concurrent.atomic.AtomicReference",
    "fields": [
      {
        "name": "value"
      }
    ]
  },
  {
    "name": "java.util.concurrent.atomic.LongAdder",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      },
      {
        "name": "add",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "sum",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "java.util.concurrent.atomic.Striped64",
    "fields": [
      {
        "name": "base"
      },
      {
        "name": "cellsBusy"
      }
    ]
  },
  {
    "name": "java.util.logging.LogManager"
  },
  {
    "name": "javax.annotation.Nonnull",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "javax.annotation.Nullable",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "javax.annotation.meta.TypeQualifier",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "javax.annotation.meta.TypeQualifierDefault",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "javax.inject.Qualifier"
  },
  {
    "name": "javax.management.ObjectName"
  },
  {
    "name": "javax.money.MonetaryAmount"
  },
  {
    "name": "javax.naming.directory.InitialDirContext"
  },
  {
    "name": "javax.net.ssl.SSLContext",
    "fields": [
      {
        "name": "contextSpi"
      }
    ]
  },
  {
    "name": "javax.security.auth.x500.X500Principal",
    "fields": [
      {
        "name": "thisX500Name"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "sun.security.x509.X500Name"
        ]
      }
    ]
  },
  {
    "name": "javax.smartcardio.CardPermission"
  },
  {
    "name": "jdk.crac.management.CRaCMXBean"
  },
  {
    "name": "jdk.internal.loader.ClassLoaders$AppClassLoader",
    "methods": [
      {
        "name": "clearCache",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "jdk.internal.loader.ClassLoaders$PlatformClassLoader",
    "methods": [
      {
        "name": "clearCache",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "jdk.internal.misc.Unsafe",
    "methods": [
      {
        "name": "getUnsafe",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "kotlin.KotlinVersion"
  },
  {
    "name": "kotlin.Metadata"
  },
  {
    "name": "kotlinx.coroutines.flow.Flow"
  },
  {
    "name": "kotlinx.coroutines.reactor.MonoKt"
  },
  {
    "name": "kotlinx.serialization.cbor.Cbor"
  },
  {
    "name": "kotlinx.serialization.json.Json"
  },
  {
    "name": "kotlinx.serialization.protobuf.ProtoBuf"
  },
  {
    "name": "libcore.io.Memory"
  },
  {
    "name": "org.apache.hc.client5.http.classic.HttpClient"
  },
  {
    "name": "org.apache.hc.client5.http.impl.async.CloseableHttpAsyncClient"
  },
  {
    "name": "org.apache.jasper.compiler.JspConfig"
  },
  {
    "name": "org.apache.logging.log4j.core.impl.Log4jContextFactory"
  },
  {
    "name": "org.apache.tomcat.websocket.server.WsHttpUpgradeHandler"
  },
  {
    "name": "org.crac.Core"
  },
  {
    "name": "org.eclipse.collections.api.list.ImmutableList"
  },
  {
    "name": "org.eclipse.core.runtime.FileLocator"
  },
  {
    "name": "org.eclipse.jetty.client.HttpClient"
  },
  {
    "name": "org.eclipse.jetty.ee10.websocket.server.JettyWebSocketServerContainer"
  },
  {
    "name": "org.elasticsearch.client.RestClient",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.elasticsearch.client.RestClientBuilder",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.glassfish.jersey.servlet.ServletContainer"
  },
  {
    "name": "org.jboss.logging.Logger"
  },
  {
    "name": "org.jmolecules.ddd.annotation.Identity"
  },
  {
    "name": "org.jmolecules.ddd.types.Association"
  },
  {
    "name": "org.jmolecules.spring.IdentifierToPrimitivesConverter"
  },
  {
    "name": "org.jruby.runtime.Constants"
  },
  {
    "name": "org.reactivestreams.Publisher"
  },
  {
    "name": "org.robolectric.Robolectric"
  },
  {
    "name": "org.slf4j.bridge.SLF4JBridgeHandler"
  },
  {
    "name": "org.springframework.ai.autoconfigure.chat.client.ChatClientAutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.ai.autoconfigure.chat.client.ChatClientBuilderProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.ai.autoconfigure.chat.observation.ChatObservationAutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.ai.autoconfigure.chat.observation.ChatObservationAutoConfiguration$FallbackChatContentObservationConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.ai.autoconfigure.chat.observation.ChatObservationProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.ai.autoconfigure.embedding.observation.EmbeddingObservationAutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.ai.autoconfigure.image.observation.ImageObservationAutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.ai.autoconfigure.image.observation.ImageObservationProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.ai.autoconfigure.ollama.OllamaAutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.ai.autoconfigure.ollama.OllamaChatProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "setModel",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.ai.autoconfigure.ollama.OllamaConnectionProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.ai.autoconfigure.ollama.OllamaEmbeddingProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "setModel",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.ai.autoconfigure.retry.SpringAiRetryAutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.ai.autoconfigure.retry.SpringAiRetryProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.ai.autoconfigure.vectorstore.CommonVectorStoreProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "setInitializeSchema",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.ai.autoconfigure.vectorstore.elasticsearch.ElasticsearchVectorStoreAutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.ai.autoconfigure.vectorstore.elasticsearch.ElasticsearchVectorStoreProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "setDimensions",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.ai.autoconfigure.vectorstore.observation.VectorStoreObservationAutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.ai.autoconfigure.vectorstore.observation.VectorStoreObservationAutoConfiguration$FallbackVectorStoreQueryResponseContentObservationConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.ai.autoconfigure.vectorstore.observation.VectorStoreObservationProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.ai.autoconfigure.vertexai.gemini.VertexAiGeminiAutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.ai.autoconfigure.vertexai.gemini.VertexAiGeminiChatProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.ai.autoconfigure.vertexai.gemini.VertexAiGeminiConnectionProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "setLocation",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setProjectId",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.aop.TargetClassAware",
    "methods": [
      {
        "name": "getTargetClass",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.aop.framework.Advised",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "isFrozen",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.aop.framework.AopInfrastructureBean",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.aop.framework.ProxyConfig",
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "setProxyTargetClass",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.aop.framework.ProxyProcessorSupport",
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "setOrder",
        "parameterTypes": [
          "int"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.aop.framework.autoproxy.InfrastructureAdvisorAutoProxyCreator",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.aot.generate.Generated",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.aot.hint.annotation.Reflective",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.beans.factory.Aware",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.beans.factory.BeanClassLoaderAware",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.beans.factory.BeanFactoryAware",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.beans.factory.FactoryBean",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.beans.factory.InitializingBean",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.beans.factory.SmartInitializingSingleton",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.beans.factory.annotation.Autowired",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.beans.factory.annotation.Qualifier",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.beans.factory.annotation.Value",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.beans.factory.config.BeanPostProcessor",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.beans.factory.config.InstantiationAwareBeanPostProcessor",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.beans.factory.config.SmartInstantiationAwareBeanPostProcessor",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.ClearCachesApplicationListener",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.SpringApplication",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.SpringBootConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.availability.AvailabilityHealthContributorAutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.data.elasticsearch.ElasticsearchReactiveHealthContributorAutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.elasticsearch.ElasticsearchRestHealthContributorAutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.endpoint.EndpointAutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.endpoint.condition.ConditionalOnAvailableEndpoint",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.endpoint.jackson.JacksonEndpointAutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.endpoint.web.CorsEndpointProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext",
          "org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.endpoint.web.reactive.WebFluxEndpointManagementContextConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.health.AbstractCompositeHealthContributorConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.health.CompositeHealthContributorConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.health.CompositeReactiveHealthContributorConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.health.ConditionalOnEnabledHealthIndicator",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.health.HealthContributorAutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.health.HealthEndpointAutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.health.HealthEndpointConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.health.HealthEndpointProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.health.HealthEndpointReactiveWebExtensionConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.health.HealthEndpointReactiveWebExtensionConfiguration$WebFluxAdditionalHealthEndpointPathsConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.health.HealthProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.health.ReactiveHealthEndpointConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.info.ConditionalOnEnabledInfoContributor",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.info.InfoContributorAutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.info.InfoContributorProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.CompositeMeterRegistryAutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.JvmMetricsAutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.LogbackMetricsAutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.MetricsAutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.SystemMetricsAutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.data.RepositoryMetricsAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.export.ConditionalOnEnabledMetricsExport",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.export.simple.SimpleMetricsExportAutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.export.simple.SimpleProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.integration.IntegrationMetricsAutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.startup.StartupTimeMetricsListenerAutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.task.TaskExecutorMetricsAutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.observation.ObservationAutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.observation.ObservationAutoConfiguration$MeterObservationHandlerConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.observation.ObservationAutoConfiguration$MeterObservationHandlerConfiguration$OnlyMetricsMeterObservationHandlerConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.observation.ObservationAutoConfiguration$OnlyMetricsConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.observation.ObservationProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.observation.web.client.HttpClientObservationsAutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.observation.web.client.HttpClientObservationsAutoConfiguration$MeterFilterConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.observation.web.client.RestClientObservationConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.observation.web.client.WebClientObservationConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.observation.web.reactive.WebFluxObservationAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.actuate.autoconfigure.observation.ObservationProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.scheduling.ScheduledTasksObservabilityAutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.system.DiskSpaceHealthContributorAutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.system.DiskSpaceHealthIndicatorProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.tracing.LogCorrelationEnvironmentPostProcessor",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.web.ManagementContextConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.web.reactive.ReactiveManagementContextAutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.web.server.ConditionalOnManagementPort",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.web.server.EnableManagementContext",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.web.server.ManagementContextAutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.web.server.ManagementContextAutoConfiguration$SameManagementContextConfiguration",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.core.env.Environment"
        ]
      },
      {
        "name": "afterSingletonsInstantiated",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.web.server.ManagementContextAutoConfiguration$SameManagementContextConfiguration$EnableSameManagementContextConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.web.server.ManagementServerProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.annotation.Endpoint",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.annotation.EndpointConverter",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.annotation.EndpointExtension",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.annotation.ReadOperation",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.annotation.Selector",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.web.annotation.EndpointWebExtension",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.web.annotation.WebEndpointFilter",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.web.reactive.AbstractWebFluxEndpointHandlerMapping$LinksHandler",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.web.reactive.AbstractWebFluxEndpointHandlerMapping$ReadOperationHandler",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.web.reactive.AbstractWebFluxEndpointHandlerMapping$WriteOperationHandler",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.web.reactive.WebFluxEndpointHandlerMapping$WebFluxLinksHandler",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.health.HealthEndpoint",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.health.HealthEndpointSupport",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getHealth",
        "parameterTypes": [
          "java.lang.Object",
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.health.ReactiveHealthEndpointWebExtension",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.ansi.AnsiOutput$Enabled",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.AutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.AutoConfigurationPackage",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.AutoConfigurationPackages$BasePackages",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.String[]"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.AutoConfigureAfter",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.AutoConfigureBefore",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.AutoConfigureOrder",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.BackgroundPreinitializer",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.EnableAutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.ImportAutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.SharedMetadataReaderFactoryContextInitializer",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.SpringBootApplication",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.aop.AopAutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.aop.AopAutoConfiguration$ClassProxyingConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.availability.ApplicationAvailabilityAutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.codec.CodecProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "setMaxInMemorySize",
        "parameterTypes": [
          "org.springframework.util.unit.DataSize"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.ConditionalOnBean",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.ConditionalOnClass",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.ConditionalOnMissingClass",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.ConditionalOnNotWarDeployment",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.ConditionalOnProperty",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.ConditionalOnResource",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.ConditionalOnSingleCandidate",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.ConditionalOnThreading",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.ConditionalOnWebApplication",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.context.LifecycleAutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.context.LifecycleProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.dao.PersistenceExceptionTranslationAutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.data.elasticsearch.ElasticsearchDataAutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.data.elasticsearch.ElasticsearchDataConfiguration$BaseConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.data.elasticsearch.ElasticsearchDataConfiguration$JavaClientConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.data.elasticsearch.ElasticsearchDataConfiguration$ReactiveRestClientConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.data.elasticsearch.ElasticsearchRepositoriesAutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.elasticsearch.ElasticsearchClientAutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.elasticsearch.ElasticsearchClientConfigurations$ElasticsearchClientConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.elasticsearch.ElasticsearchClientConfigurations$ElasticsearchTransportConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.elasticsearch.ElasticsearchClientConfigurations$JacksonJsonpMapperConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.elasticsearch.ElasticsearchProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getUris",
        "parameterTypes": []
      },
      {
        "name": "setPassword",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUris",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setUsername",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.elasticsearch.ElasticsearchRestClientAutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.elasticsearch.ElasticsearchRestClientConfigurations$RestClientBuilderConfiguration",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.elasticsearch.ElasticsearchProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.elasticsearch.ElasticsearchRestClientConfigurations$RestClientConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.elasticsearch.ReactiveElasticsearchClientAutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.freemarker.FreeMarkerTemplateAvailabilityProvider",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.groovy.template.GroovyTemplateAvailabilityProvider",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.gson.GsonAutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.gson.GsonProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.http.codec.CodecsAutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.http.codec.CodecsAutoConfiguration$DefaultCodecsConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.http.codec.CodecsAutoConfiguration$JacksonCodecConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.info.ProjectInfoProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.info.ProjectInfoProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.integration.IntegrationPropertiesEnvironmentPostProcessor",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonMixinConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jackson.JacksonProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.mustache.MustacheTemplateAvailabilityProvider",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.netty.NettyAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.netty.NettyProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.netty.NettyProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.reactor.ReactorAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.reactor.ReactorProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.reactor.ReactorProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.reactor.netty.ReactorNettyConfigurations$ReactorResourceFactoryConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.reactor.netty.ReactorNettyProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.sql.init.SqlInitializationAutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.sql.init.SqlInitializationProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.ssl.SslAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.ssl.SslProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.ssl.SslProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.TaskExecutionProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.TaskExecutorConfigurations$SimpleAsyncTaskExecutorBuilderConfiguration",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.task.TaskExecutionProperties",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.TaskExecutorConfigurations$TaskExecutorBuilderConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.TaskExecutorConfigurations$TaskExecutorConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.TaskExecutorConfigurations$ThreadPoolTaskExecutorBuilderConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.TaskSchedulingAutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.TaskSchedulingConfigurations$SimpleAsyncTaskSchedulerBuilderConfiguration",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.task.TaskSchedulingProperties",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.TaskSchedulingConfigurations$TaskSchedulerBuilderConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.TaskSchedulingConfigurations$ThreadPoolTaskSchedulerBuilderConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.TaskSchedulingProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.thymeleaf.ThymeleafTemplateAvailabilityProvider",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizationAutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizer",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.transaction.TransactionProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.WebProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration$NettyWebServerFactoryCustomizerConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.reactive.HttpHandlerAutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.reactive.HttpHandlerAutoConfiguration$AnnotationConfig",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.reactive.ReactiveMultipartAutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.reactive.ReactiveMultipartProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.reactive.ReactiveWebServerFactoryAutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.reactive.ReactiveWebServerFactoryConfiguration$EmbeddedNetty",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.reactive.WebFluxAutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.reactive.WebFluxAutoConfiguration$EnableWebFluxConfiguration",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.reactive.WebFluxProperties",
          "org.springframework.boot.autoconfigure.web.WebProperties",
          "org.springframework.boot.autoconfigure.web.ServerProperties",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      },
      {
        "name": "localeContextResolver",
        "parameterTypes": []
      },
      {
        "name": "webFluxConversionService",
        "parameterTypes": []
      },
      {
        "name": "webFluxValidator",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.reactive.WebFluxAutoConfiguration$WebFluxConfig",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.core.env.Environment",
          "org.springframework.boot.autoconfigure.web.WebProperties",
          "org.springframework.boot.autoconfigure.web.reactive.WebFluxProperties",
          "org.springframework.beans.factory.ListableBeanFactory",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      },
      {
        "name": "addFormatters",
        "parameterTypes": [
          "org.springframework.format.FormatterRegistry"
        ]
      },
      {
        "name": "addResourceHandlers",
        "parameterTypes": [
          "org.springframework.web.reactive.config.ResourceHandlerRegistry"
        ]
      },
      {
        "name": "configureArgumentResolvers",
        "parameterTypes": [
          "org.springframework.web.reactive.result.method.annotation.ArgumentResolverConfigurer"
        ]
      },
      {
        "name": "configureBlockingExecution",
        "parameterTypes": [
          "org.springframework.web.reactive.config.BlockingExecutionConfigurer"
        ]
      },
      {
        "name": "configureHttpMessageCodecs",
        "parameterTypes": [
          "org.springframework.http.codec.ServerCodecConfigurer"
        ]
      },
      {
        "name": "configureViewResolvers",
        "parameterTypes": [
          "org.springframework.web.reactive.config.ViewResolverRegistry"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.reactive.WebFluxAutoConfiguration$WelcomePageConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.reactive.WebFluxProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.reactive.WebSessionIdResolverAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.ServerProperties",
          "org.springframework.boot.autoconfigure.web.reactive.WebFluxProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.reactive.error.ErrorWebFluxAutoConfiguration",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.ServerProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.reactive.function.client.ClientHttpConnectorAutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.reactive.function.client.ClientHttpConnectorFactoryConfiguration$ReactorNetty",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.reactive.function.client.WebClientAutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.reactive.function.client.WebClientAutoConfiguration$WebClientCodecsConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.JspTemplateAvailabilityProvider",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.builder.ParentContextCloserApplicationListener",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.cloud.CloudFoundryVcapEnvironmentPostProcessor",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.logging.DeferredLogFactory"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.context.ConfigurationWarningsApplicationContextInitializer",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.context.ContextIdApplicationContextInitializer",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.context.FileEncodingApplicationListener",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.context.config.AnsiOutputApplicationListener",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.context.config.ConfigDataEnvironmentPostProcessor",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.logging.DeferredLogFactory",
          "org.springframework.boot.ConfigurableBootstrapContext"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.context.config.ConfigDataNotFoundAction",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.context.config.ConfigDataProperties",
    "queryAllDeclaredConstructors": true,
    "fields": [
      {
        "name": "this$0"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.context.config.ConfigTreeConfigDataLoader",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.context.config.ConfigTreeConfigDataLocationResolver",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.core.io.ResourceLoader"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.context.config.DelegatingApplicationContextInitializer",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.context.config.DelegatingApplicationListener",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.context.config.StandardConfigDataLoader",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.context.config.StandardConfigDataLocationResolver",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.logging.DeferredLogFactory",
          "org.springframework.boot.context.properties.bind.Binder",
          "org.springframework.core.io.ResourceLoader"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.context.event.EventPublishingRunListener",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.SpringApplication",
          "java.lang.String[]"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.context.logging.LoggingApplicationListener",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.context.properties.ConfigurationProperties",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.context.properties.EnableConfigurationProperties",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.context.properties.bind.Name",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.env.EnvironmentPostProcessorApplicationListener",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.env.PropertiesPropertySourceLoader",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.env.RandomValuePropertySourceEnvironmentPostProcessor",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.logging.DeferredLogFactory"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.env.SpringApplicationJsonEnvironmentPostProcessor",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.env.YamlPropertySourceLoader",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.loader.launch.LaunchedClassLoader",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "clearCache",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.loader.net.protocol.jar.JarUrlClassLoader",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.logging.java.JavaLoggingSystem$Factory",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.logging.java.JavaLoggingSystem.Factory"
  },
  {
    "name": "org.springframework.boot.logging.log4j2.Log4J2LoggingSystem$Factory",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.logging.log4j2.Log4J2LoggingSystem.Factory"
  },
  {
    "name": "org.springframework.boot.logging.logback.ApplicationNameConverter",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.logging.logback.ColorConverter",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.logging.logback.ExtendedWhitespaceThrowableProxyConverter",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.logging.logback.LogbackLoggingSystem$Factory",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.logging.logback.LogbackLoggingSystem.Factory"
  },
  {
    "name": "org.springframework.boot.logging.logback.RootLogLevelConfigurator"
  },
  {
    "name": "org.springframework.boot.reactor.ReactorEnvironmentPostProcessor",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.rsocket.context.RSocketPortInfoApplicationContextInitializer",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.validation.beanvalidation.MethodValidationExcludeFilter",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.web.context.ServerPortInfoApplicationContextInitializer",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContextFactory",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.boot.web.servlet.context.ServletWebServerApplicationContextFactory",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.cloud.function.cloudevent.CloudEventsFunctionExtensionConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.function.context.FunctionProperties",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.cloud.function.context.config.ContextFunctionCatalogAutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.function.context.config.ContextFunctionCatalogAutoConfiguration$JsonMapperConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.function.context.config.ContextFunctionCatalogAutoConfiguration$PlainFunctionScanConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.function.context.config.ContextFunctionCatalogInitializer",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.cloud.function.context.config.FunctionsEndpointAutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.function.observability.ObservationAutoConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.context.ApplicationContextAware",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.context.ApplicationEventPublisherAware",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.context.annotation.Bean",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.context.annotation.ComponentScan",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.context.annotation.ComponentScan$Filter",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.context.annotation.Conditional",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.context.annotation.Configuration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.context.annotation.ConfigurationClassEnhancer$EnhancedConfiguration",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.context.annotation.Import",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.context.annotation.ImportRuntimeHints",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.context.annotation.Lazy",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.context.annotation.Primary",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.context.annotation.Role",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.context.annotation.Scope",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.core.DecoratingProxy",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.core.Ordered",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.core.annotation.AliasFor",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.core.annotation.Order",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.core.io.Resource",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "from",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "valueOf",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.core.io.support.PropertiesLoaderSupport",
    "allDeclaredFields": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "setIgnoreResourceNotFound",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setLocations",
        "parameterTypes": [
          "org.springframework.core.io.Resource[]"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.data.annotation.Id",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.annotation.Persistent",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.convert.ReadingConverter",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.convert.WritingConverter",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.elasticsearch.annotations.Document",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.elasticsearch.client.elc.ReactiveElasticsearchTemplate",
    "methods": [
      {
        "name": "toReactiveElasticsearchOperations",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.data.elasticsearch.core.ReactiveElasticsearchOperations",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.data.elasticsearch.client.elc.ReactiveElasticsearchTemplate"
        ]
      },
      {
        "name": "from",
        "parameterTypes": [
          "org.springframework.data.elasticsearch.client.elc.ReactiveElasticsearchTemplate"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "org.springframework.data.elasticsearch.client.elc.ReactiveElasticsearchTemplate"
        ]
      },
      {
        "name": "valueOf",
        "parameterTypes": [
          "org.springframework.data.elasticsearch.client.elc.ReactiveElasticsearchTemplate"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "delete",
        "parameterTypes": [
          "java.lang.Object",
          "org.springframework.data.elasticsearch.core.RefreshPolicy"
        ]
      },
      {
        "name": "deleteAll",
        "parameterTypes": [
          "java.lang.Iterable",
          "org.springframework.data.elasticsearch.core.RefreshPolicy"
        ]
      },
      {
        "name": "deleteAll",
        "parameterTypes": [
          "org.reactivestreams.Publisher",
          "org.springframework.data.elasticsearch.core.RefreshPolicy"
        ]
      },
      {
        "name": "deleteAll",
        "parameterTypes": [
          "org.springframework.data.elasticsearch.core.RefreshPolicy"
        ]
      },
      {
        "name": "deleteAllById",
        "parameterTypes": [
          "java.lang.Iterable",
          "org.springframework.data.elasticsearch.core.RefreshPolicy"
        ]
      },
      {
        "name": "deleteById",
        "parameterTypes": [
          "java.lang.Object",
          "org.springframework.data.elasticsearch.core.RefreshPolicy"
        ]
      },
      {
        "name": "deleteById",
        "parameterTypes": [
          "org.reactivestreams.Publisher",
          "org.springframework.data.elasticsearch.core.RefreshPolicy"
        ]
      },
      {
        "name": "save",
        "parameterTypes": [
          "java.lang.Object",
          "org.springframework.data.elasticsearch.core.RefreshPolicy"
        ]
      },
      {
        "name": "saveAll",
        "parameterTypes": [
          "java.lang.Iterable",
          "org.springframework.data.elasticsearch.core.RefreshPolicy"
        ]
      },
      {
        "name": "saveAll",
        "parameterTypes": [
          "org.reactivestreams.Publisher",
          "org.springframework.data.elasticsearch.core.RefreshPolicy"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.data.elasticsearch.repository.config.EnableReactiveElasticsearchRepositories",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.elasticsearch.repository.support.ReactiveElasticsearchRepositoryFactoryBean",
    "allDeclaredFields": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "setReactiveElasticsearchOperations",
        "parameterTypes": [
          "org.springframework.data.elasticsearch.core.ReactiveElasticsearchOperations"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.data.elasticsearch.repository.support.SimpleReactiveElasticsearchRepository",
    "queryAllPublicMethods": true,
    "queryAllDeclaredConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.data.elasticsearch.repository.support.ElasticsearchEntityInformation",
          "org.springframework.data.elasticsearch.core.ReactiveElasticsearchOperations"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.data.mapping.PersistentPropertyAccessor"
  },
  {
    "name": "org.springframework.data.querydsl.QuerydslPredicateExecutor"
  },
  {
    "name": "org.springframework.data.querydsl.ReactiveQuerydslPredicateExecutor"
  },
  {
    "name": "org.springframework.data.repository.NoRepositoryBean",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.repository.Repository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.data.repository.config.PropertiesBasedNamedQueriesFactoryBean",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.data.repository.core.NamedQueries",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.data.repository.core.support.PropertiesBasedNamedQueries"
        ]
      },
      {
        "name": "from",
        "parameterTypes": [
          "org.springframework.data.repository.core.support.PropertiesBasedNamedQueries"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "org.springframework.data.repository.core.support.PropertiesBasedNamedQueries"
        ]
      },
      {
        "name": "valueOf",
        "parameterTypes": [
          "org.springframework.data.repository.core.support.PropertiesBasedNamedQueries"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.data.repository.core.support.PropertiesBasedNamedQueries",
    "methods": [
      {
        "name": "toNamedQueries",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport",
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "setLazyInit",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setNamedQueries",
        "parameterTypes": [
          "org.springframework.data.repository.core.NamedQueries"
        ]
      },
      {
        "name": "setQueryLookupStrategyKey",
        "parameterTypes": [
          "org.springframework.data.repository.query.QueryLookupStrategy$Key"
        ]
      },
      {
        "name": "setRepositoryFragments",
        "parameterTypes": [
          "org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.data.repository.core.support.RepositoryFactoryInformation",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.data.repository.core.support.RepositoryFragmentsFactoryBean",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.util.List"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.data.repository.query.QueryByExampleExecutor"
  },
  {
    "name": "org.springframework.data.repository.query.QueryLookupStrategy$Key",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.repository.query.ReactiveQueryByExampleExecutor"
  },
  {
    "name": "org.springframework.data.repository.reactive.ReactiveCrudRepository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "count",
        "parameterTypes": []
      },
      {
        "name": "delete",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "deleteAll",
        "parameterTypes": []
      },
      {
        "name": "deleteAll",
        "parameterTypes": [
          "java.lang.Iterable"
        ]
      },
      {
        "name": "deleteAll",
        "parameterTypes": [
          "org.reactivestreams.Publisher"
        ]
      },
      {
        "name": "deleteAllById",
        "parameterTypes": [
          "java.lang.Iterable"
        ]
      },
      {
        "name": "deleteById",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "deleteById",
        "parameterTypes": [
          "org.reactivestreams.Publisher"
        ]
      },
      {
        "name": "existsById",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "existsById",
        "parameterTypes": [
          "org.reactivestreams.Publisher"
        ]
      },
      {
        "name": "findAll",
        "parameterTypes": []
      },
      {
        "name": "findAllById",
        "parameterTypes": [
          "java.lang.Iterable"
        ]
      },
      {
        "name": "findAllById",
        "parameterTypes": [
          "org.reactivestreams.Publisher"
        ]
      },
      {
        "name": "findById",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "findById",
        "parameterTypes": [
          "org.reactivestreams.Publisher"
        ]
      },
      {
        "name": "save",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "saveAll",
        "parameterTypes": [
          "java.lang.Iterable"
        ]
      },
      {
        "name": "saveAll",
        "parameterTypes": [
          "org.reactivestreams.Publisher"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.data.repository.reactive.ReactiveSortingRepository",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "findAll",
        "parameterTypes": [
          "org.springframework.data.domain.Sort"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.data.util.CustomCollections$EclipseCollections",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.data.util.CustomCollections$VavrCollections",
    "queryAllDeclaredConstructors": true,
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.data.util.CustomCollections.EclipseCollections"
  },
  {
    "name": "org.springframework.data.util.CustomCollections.VavrCollections"
  },
  {
    "name": "org.springframework.data.util.KotlinBeanInfoFactory",
    "queryAllPublicConstructors": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.http.codec.ClientCodecConfigurer"
  },
  {
    "name": "org.springframework.http.codec.ServerCodecConfigurer"
  },
  {
    "name": "org.springframework.http.codec.support.DefaultClientCodecConfigurer",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.http.codec.support.DefaultServerCodecConfigurer",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.lang.NonNullApi"
  },
  {
    "name": "org.springframework.lang.Nullable"
  },
  {
    "name": "org.springframework.security.core.context.ReactiveSecurityContextHolder"
  },
  {
    "name": "org.springframework.stereotype.Component",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.stereotype.Controller",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.stereotype.Indexed",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.transaction.interceptor.TransactionalProxy",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.util.Assert"
  },
  {
    "name": "org.springframework.util.unit.DataSizeEditor"
  },
  {
    "name": "org.springframework.web.bind.annotation.CrossOrigin",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.bind.annotation.GetMapping",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.bind.annotation.Mapping",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.bind.annotation.PostMapping",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.bind.annotation.RequestMapping",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.bind.annotation.ResponseBody",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.bind.annotation.RestController",
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.reactive.DispatcherHandler"
  },
  {
    "name": "org.springframework.web.reactive.config.DelegatingWebFluxConfiguration",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "configurePathMatching",
        "parameterTypes": [
          "org.springframework.web.reactive.config.PathMatchConfigurer"
        ]
      },
      {
        "name": "setConfigurers",
        "parameterTypes": [
          "java.util.List"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.web.reactive.config.WebFluxConfigurationSupport",
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "handlerFunctionAdapter",
        "parameterTypes": []
      },
      {
        "name": "requestMappingHandlerAdapter",
        "parameterTypes": [
          "org.springframework.core.ReactiveAdapterRegistry",
          "org.springframework.http.codec.ServerCodecConfigurer",
          "org.springframework.format.support.FormattingConversionService",
          "org.springframework.validation.Validator"
        ]
      },
      {
        "name": "requestMappingHandlerMapping",
        "parameterTypes": [
          "org.springframework.web.reactive.accept.RequestedContentTypeResolver"
        ]
      },
      {
        "name": "resourceHandlerMapping",
        "parameterTypes": [
          "org.springframework.web.reactive.resource.ResourceUrlProvider"
        ]
      },
      {
        "name": "resourceUrlProvider",
        "parameterTypes": []
      },
      {
        "name": "responseBodyResultHandler",
        "parameterTypes": [
          "org.springframework.core.ReactiveAdapterRegistry",
          "org.springframework.http.codec.ServerCodecConfigurer",
          "org.springframework.web.reactive.accept.RequestedContentTypeResolver"
        ]
      },
      {
        "name": "responseEntityResultHandler",
        "parameterTypes": [
          "org.springframework.core.ReactiveAdapterRegistry",
          "org.springframework.http.codec.ServerCodecConfigurer",
          "org.springframework.web.reactive.accept.RequestedContentTypeResolver"
        ]
      },
      {
        "name": "responseStatusExceptionHandler",
        "parameterTypes": []
      },
      {
        "name": "routerFunctionMapping",
        "parameterTypes": [
          "org.springframework.http.codec.ServerCodecConfigurer"
        ]
      },
      {
        "name": "serverCodecConfigurer",
        "parameterTypes": []
      },
      {
        "name": "serverResponseResultHandler",
        "parameterTypes": [
          "org.springframework.http.codec.ServerCodecConfigurer"
        ]
      },
      {
        "name": "setApplicationContext",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext"
        ]
      },
      {
        "name": "simpleHandlerAdapter",
        "parameterTypes": []
      },
      {
        "name": "viewResolutionResultHandler",
        "parameterTypes": [
          "org.springframework.core.ReactiveAdapterRegistry",
          "org.springframework.web.reactive.accept.RequestedContentTypeResolver"
        ]
      },
      {
        "name": "webFluxAdapterRegistry",
        "parameterTypes": []
      },
      {
        "name": "webFluxContentTypeResolver",
        "parameterTypes": []
      },
      {
        "name": "webFluxWebSocketHandlerAdapter",
        "parameterTypes": []
      },
      {
        "name": "webHandler",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.web.reactive.config.WebFluxConfigurer",
    "queryAllDeclaredMethods": true,
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "addCorsMappings",
        "parameterTypes": [
          "org.springframework.web.reactive.config.CorsRegistry"
        ]
      },
      {
        "name": "configureContentTypeResolver",
        "parameterTypes": [
          "org.springframework.web.reactive.accept.RequestedContentTypeResolverBuilder"
        ]
      },
      {
        "name": "configurePathMatching",
        "parameterTypes": [
          "org.springframework.web.reactive.config.PathMatchConfigurer"
        ]
      },
      {
        "name": "getMessageCodesResolver",
        "parameterTypes": []
      },
      {
        "name": "getValidator",
        "parameterTypes": []
      },
      {
        "name": "getWebSocketService",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.web.reactive.function.server.HandlerFunction",
    "methods": [
      {
        "name": "handle",
        "parameterTypes": [
          "org.springframework.web.reactive.function.server.ServerRequest"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.web.reactive.result.method.AbstractHandlerMethodMapping$PreFlightAmbiguousMatchHandler",
    "methods": [
      {
        "name": "handle",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.web.reactive.result.method.RequestMappingInfoHandlerMapping$HttpOptionsHandler",
    "methods": [
      {
        "name": "handle",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "org.springframework.web.servlet.DispatcherServlet"
  },
  {
    "name": "org.synchronoss.cloud.nio.multipart.NioMultipartParser"
  },
  {
    "name": "org.thymeleaf.spring6.SpringTemplateEngine"
  },
  {
    "name": "org.yaml.snakeyaml.Yaml"
  },
  {
    "name": "reactor.core.publisher.Flux"
  },
  {
    "name": "reactor.core.publisher.Mono"
  },
  {
    "name": "reactor.core.publisher.MonoCacheTime",
    "fields": [
      {
        "name": "state"
      }
    ]
  },
  {
    "name": "reactor.core.publisher.MonoCreate$DefaultMonoSink",
    "fields": [
      {
        "name": "disposable"
      },
      {
        "name": "requestConsumer"
      },
      {
        "name": "state"
      }
    ]
  },
  {
    "name": "reactor.core.publisher.MonoFlatMap$FlatMapMain",
    "fields": [
      {
        "name": "second"
      }
    ]
  },
  {
    "name": "reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain",
    "fields": [
      {
        "name": "state"
      }
    ]
  },
  {
    "name": "reactor.core.publisher.MonoWhen$WhenCoordinator",
    "fields": [
      {
        "name": "state"
      }
    ]
  },
  {
    "name": "reactor.core.publisher.MonoWhen$WhenInner",
    "fields": [
      {
        "name": "s"
      }
    ]
  },
  {
    "name": "reactor.core.scheduler.BoundedElasticThreadPerTaskScheduler",
    "fields": [
      {
        "name": "state"
      }
    ]
  },
  {
    "name": "reactor.core.scheduler.BoundedElasticThreadPerTaskScheduler$BoundedServices",
    "fields": [
      {
        "name": "activeExecutorsState"
      }
    ]
  },
  {
    "name": "reactor.core.scheduler.BoundedElasticThreadPerTaskScheduler$SequentialThreadPerTaskExecutor",
    "fields": [
      {
        "name": "size"
      },
      {
        "name": "wipAndRefCnt"
      }
    ]
  },
  {
    "name": "reactor.netty.http.client.HttpClient"
  },
  {
    "name": "reactor.netty.http.server.HttpServerResponse"
  },
  {
    "name": "reactor.netty.transport.ServerTransport$Acceptor",
    "methods": [
      {
        "name": "channelRead",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Object"
        ]
      },
      {
        "name": "exceptionCaught",
        "parameterTypes": [
          "io.netty.channel.ChannelHandlerContext",
          "java.lang.Throwable"
        ]
      }
    ]
  },
  {
    "name": "reactor.netty.transport.ServerTransport$AcceptorInitializer"
  },
  {
    "name": "reactor.netty.transport.TransportConnector$MonoChannelPromise",
    "fields": [
      {
        "name": "result"
      }
    ]
  },
  {
    "name": "reactor.netty5.http.client.HttpClient"
  },
  {
    "name": "reactor.netty5.http.server.HttpServerResponse"
  },
  {
    "name": "reactor.tools.agent.ReactorDebugAgent"
  },
  {
    "name": "reactor.util.concurrent.MpscLinkedQueue",
    "fields": [
      {
        "name": "consumerNode"
      },
      {
        "name": "producerNode"
      }
    ]
  },
  {
    "name": "reactor.util.concurrent.MpscLinkedQueue$LinkedQueueNode",
    "fields": [
      {
        "name": "next"
      }
    ]
  },
  {
    "name": "reactor.util.lang.NonNullApi"
  },
  {
    "name": "scala.Option"
  },
  {
    "name": "scala.util.Properties"
  },
  {
    "name": "sun.misc.Unsafe",
    "fields": [
      {
        "name": "theUnsafe"
      }
    ],
    "methods": [
      {
        "name": "copyMemory",
        "parameterTypes": [
          "java.lang.Object",
          "long",
          "java.lang.Object",
          "long",
          "long"
        ]
      },
      {
        "name": "getAndAddLong",
        "parameterTypes": [
          "java.lang.Object",
          "long",
          "long"
        ]
      },
      {
        "name": "getAndSetObject",
        "parameterTypes": [
          "java.lang.Object",
          "long",
          "java.lang.Object"
        ]
      },
      {
        "name": "invokeCleaner",
        "parameterTypes": [
          "java.nio.ByteBuffer"
        ]
      },
      {
        "name": "storeFence",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "sun.security.pkcs12.PKCS12KeyStore",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "sun.security.pkcs12.PKCS12KeyStore$DualFormatPKCS12",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "sun.security.provider.DSA$SHA224withDSA",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "sun.security.provider.DSA$SHA256withDSA",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "sun.security.provider.NativePRNG",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.security.SecureRandomParameters"
        ]
      }
    ]
  },
  {
    "name": "sun.security.provider.SHA",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "sun.security.provider.SHA2$SHA224",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "sun.security.provider.SHA2$SHA256",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "sun.security.provider.SHA5$SHA384",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "sun.security.provider.SHA5$SHA512",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "sun.security.provider.X509Factory",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "sun.security.rsa.PSSParameters",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "sun.security.rsa.RSAKeyFactory$Legacy",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "sun.security.rsa.RSAPSSSignature",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "sun.security.rsa.RSASignature$SHA224withRSA",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "sun.security.ssl.KeyManagerFactoryImpl$SunX509",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "sun.security.ssl.SSLContextImpl",
    "fields": [
      {
        "name": "trustManager"
      }
    ]
  },
  {
    "name": "sun.security.ssl.SSLContextImpl$AbstractTLSContext",
    "fields": [
      {
        "name": "trustManager"
      }
    ]
  },
  {
    "name": "sun.security.ssl.SSLContextImpl$CustomizedTLSContext",
    "fields": [
      {
        "name": "trustManager"
      }
    ]
  },
  {
    "name": "sun.security.ssl.SSLContextImpl$DefaultSSLContext",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "sun.security.ssl.SSLContextImpl$TLSContext",
    "fields": [
      {
        "name": "trustManager"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "sun.security.ssl.TrustManagerFactoryImpl$PKIXFactory",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": []
      }
    ]
  },
  {
    "name": "sun.security.x509.AuthorityInfoAccessExtension",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Boolean",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "sun.security.x509.AuthorityKeyIdentifierExtension",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Boolean",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "sun.security.x509.BasicConstraintsExtension",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Boolean",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "sun.security.x509.CRLDistributionPointsExtension",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Boolean",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "sun.security.x509.CertificatePoliciesExtension",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Boolean",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "sun.security.x509.ExtendedKeyUsageExtension",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Boolean",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "sun.security.x509.IssuerAlternativeNameExtension",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Boolean",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "sun.security.x509.KeyUsageExtension",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Boolean",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "sun.security.x509.NetscapeCertTypeExtension",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Boolean",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "sun.security.x509.PrivateKeyUsageExtension",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Boolean",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "sun.security.x509.SubjectAlternativeNameExtension",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Boolean",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "sun.security.x509.SubjectKeyIdentifierExtension",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Boolean",
          "java.lang.Object"
        ]
      }
    ]
  }
]
